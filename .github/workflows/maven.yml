name: Java CI with Maven in Linux

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: com.mycompany.myshop
    strategy:
      matrix:
        include:
          - java: 8
            additional-maven-args-java8: "-Pcoveralls -DrepoToken=$COVERALLS_REPO_TOKEN -DpullRequest=${{ github.event.pull_request.number }}"
          - java: 11
          - java: 17
            additional-maven-args-java17: "-Pjacoco sonar:sonar -Dsonar.projectKey=lore1379_my-shop"
          

    name: Build with Java ${{ matrix.java }} on Linux
    steps:
    - uses: actions/checkout@v2
      with:
        # Shallow clones should be disabled for a better relevancy of SonarQube analysis
        fetch-depth: 0
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: xvfb-run mvn verify ${{ matrix.additional-maven-args-java8 }} ${{ matrix.additional-maven-args-java17 }}
      working-directory: ${{ env.workdir }}
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Generate JUnit Report
      run: >
        mvn surefire-report:report-only site:site -DgenerateReports=false
      working-directory: ${{ env.workdir }}
      if: ${{ failure() }}
    - name: Archive JUnit Report
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: surefire-report-jdk-${{ matrix.java }}
        path: '**/target/site'
    